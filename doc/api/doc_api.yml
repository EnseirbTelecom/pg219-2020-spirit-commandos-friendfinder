openapi: 3.0.1
info:
  title: 'FriendFinder'
  description: "Application mobile pour la g√©olocalisation des amis"
  version: 1.0.1
  # x-logo:
  #   url : "https://drive.google.com/file/d/1611dZ2Q9sXKlZ0aq1jWmDQs-aB4bOu0M/view?usp=sharing"
  #   backgroundColor: "#FFFFFF"
  #   altText: "FriendFinder logo"

servers:
  - url: https://localhost:8082/api
    description: Development server
tags: 
  - name : User
    description : All user details
  - name : Positions
    description : Everything about geolocations
  - name : Friends 
    description : Friends details
  - name : Notifications
    description : Notification system
paths:
  "/signup":
    post:
      tags : 
      - User
      summary : Add a new user to the dataBase
      operationId: userSignup
      requestBody:
        description: User object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
            examples: 
              user:
                summary: A user object example
                value:
                    {  "mail" : "user@domain.com",
                        "password" : "user",
                        "nom" : "userFamilyName",
                        "prenom" : "userFirstName",
                        "pseudo" : "userPseudo",
                        "date" : "10/04/1997"
                    }     
                 
        required: true
      responses:
        '200':
          description: success
          headers: 
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                text: 
                  type: string
        '403':
          description: Mail address already used
          content: {}
        '405':
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  /signin:
    post:
      tags : 
        - User
      summary : Connects the user to the APP
      operationId: userSignin
      requestBody:
        description: Mail address and user's password.
        content:
          application/json:
            schema:
              type: Object
              properties:
                mail:
                  type: string
                password:
                  type: string
            examples : 
              logIn : 
                summary: User Identification Example
                value:
                    {   "mail" : "user@domain.com",
                        "password" : "user"
                    }  
        required: true
      responses:
        '200':
          description: Authentification Success
          content:
            application/json:
              schema:
                text: 
                  type: string
        '403':
          description: Invalid Id
          content: {}
  /users/{token} :
    get:
      tags: 
      - User
      summary : Returns the list of users
      operationId: getUsers
      parameters: 
      - name : token
        in : path
        description : token needed to verify the current user
        required : true
        schema : 
          type : string
      responses : 
        '200' : 
          description : successful operation
          content : 
            application/json:
              schema: 
                type : array
                items : 
                  $ref : "#/components/schemas/user"
        '400' : 
          description : invalid input
  /getUserProfile/{token}/{id}:
    get:
      tags: 
      - User
      summary : Returns one user by his Id
      operationId: getUserById
      parameters: 
      - name : token
        in : path
        description : token needed to verify the current user
        required : true
        schema : 
          type : string
      - name : id
        in : path
        description : user's Id
        required : true
        schema : 
          type : string
      responses : 
        '200' : 
          description : successful operation
          content : 
            application/json:
              schema: 
                  "$ref" : "#/components/schemas/user"
        '400' : 
          description : invalid input


components:
 schemas:
    user:
      required:
      - mail
      - password
      - nom
      - prenom
      - pseudo
      - date
      type: Object
      properties:
        mail:
          type: string
          # example: user@domain.com
        password:
          type: string
          # example: user
        nom:
          type: string
          # example: familyName
        prenom:
          type: string
          # example: firstName
        pseudo:
          type: string
          # example: pseudo
        date:
          type: string
          format: date-time
          # example: 10/04/1997
    
    
    
